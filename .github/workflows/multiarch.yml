name: Docker PostGIS CI

on:
  push:
    paths-ignore:
      - '.github/dependabot.yml'
      - '.gitignore'
      - 'LICENSE'
      - 'README.md'
  pull_request:
  schedule:
    - cron: '15 5 * * 2'  # Weekly, 1 day after the upstream

# Cancel existing executions when new commits are pushed onto the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:

  make-docker-images:

    strategy:
      matrix:
        # exclude the latest version set for use with "include" below
        postgres: [11, 12, 13, 14]
        postgis: ['3.3']
        latest: [false]
        include:
        - postgres: 15  # only use the single latest version with "latest: true"
          postgis: '3.3'
          latest: true

    name: Build docker image for ${{ matrix.postgres }}-${{ matrix.postgis }}

    runs-on: ubuntu-20.04

    permissions:
      contents: read
      id-token: write
      packages: write

    env:
      VERSION: ${{ matrix.postgres }}-${{ matrix.postgis }}

    steps:

    - name: Set up QEMU for amd64 and arm64
      uses: docker/setup-qemu-action@2b82ce82d56a2a04d2637cd93a637ae1b359c0a7
      with:
        platforms: linux/amd64,linux/arm64

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@6a58db7e0d21ca03e6c44877909e80e45217eed2

    - name: Set up Depot CLI
      uses: depot/setup-action@ad05a752b7f61b7a0b2d19d8b02b4da9d9c761a3

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@2c0bd771b40637d97bf205cbccdd294a32112176
      with:
        images: ghcr.io/${{ github.repository_owner }}/postgis
        labels: |
          org.opencontainers.image.title=postgis
          org.opencontainers.image.version=${{ env.VERSION }}
          org.opencontainers.image.base.name=docker.io/postgis/postgis:${{ env.VERSION }}
        tags: |
          type=raw,value=${{ env.VERSION }},enable=true,priority=200
          type=raw,value=${{ matrix.postgres }},enable=true,priority=200
          type=raw,value=latest,enable=${{ matrix.latest }},priority=200

    - name: Login to GitHub Container Registry
      if: ${{ (github.ref == 'refs/heads/multiarch') && (github.event_name != 'pull_request') && !env.ACT }}
      uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Multi-platform build (docker buildx)
      if: ${{ !((github.ref == 'refs/heads/multiarch') && (github.event_name != 'pull_request') && !env.ACT) }}
      uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
      with:
        platforms: linux/amd64,linux/arm64
        context: github.com/postgis/docker-postgis#master
        file: ${{ env.VERSION }}/Dockerfile
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        pull: true
        push: false

    - name: Multi-platform build and push (depot.dev)
      if: ${{ (github.ref == 'refs/heads/multiarch') && (github.event_name != 'pull_request') && !env.ACT }}
      uses: depot/build-push-action@019633c7ae6b50b76ce089e97a7dec328801fb70
      with:
        project: p4q8k8mb22
        no-cache: true
        platforms: linux/amd64,linux/arm64
        context: github.com/postgis/docker-postgis#master
        file: ${{ env.VERSION }}/Dockerfile
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        pull: true
        push: true
